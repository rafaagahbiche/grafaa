@using PersonalSite.Service.ViewModel
@model ArticleViewModel

@section Scripts {
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
    <script src=@Url.Content(string.Format("~/Scripts/backoffice/createpage-min.js?{0}{1}", DateTime.Now.Minute, DateTime.Now.Second)) type="text/javascript"></script>
}

@{
    ViewBag.Title = "Edit";
    ViewBag.TabCount = 0;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 save">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
        <div id="article">
            @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })
            <input type="hidden" value="@Model.Id" id="pagefuckingId" />
            @if (Model.PagesIds != null) {
                for (var i = 0; i < Model.PagesIds.Count; i++)
                {
                    @Html.HiddenFor(model => model.PagesIds[i]);
                }
            }
        </div>
        <br />
        <br />
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Title" } })
                @Html.ValidationMessageFor(model => model.Title, string.Empty, new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Description" } })
                @Html.ValidationMessageFor(model => model.Description, string.Empty, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group edit-pages">
            <div class="pages-tabs">
                <ul class="tab-links" id="tabs">
                @if (Model != null && Model.ArticlePages != null)
                {
                    if (Model.ArticlePages.Count > 0)
                    {
                        for (int tabCount = 0; tabCount < Model.ArticlePages.Count; tabCount++)
                        {
                            ViewData["count"] = tabCount;
                            { Html.RenderPartial("PageTab", Model.ArticlePages[tabCount]); }
                        }
                    }
                    else
                    {
                        ViewData["count"] = 0;
                        { Html.RenderPartial("PageTab", new PageViewModel { PageId = -1, ParentArticleId = Model.Id }); }
                    }
                }
                    <li class="plus">
                        <a id="tabplus" href="#">&#x2B;</a>
                    </li>
                </ul>
            </div>
            <div class="col-md-10 tab-content" id="tobeupdated">
                @if (Model.ArticlePages != null && Model.ArticlePages.Count > 0)
                {
                    { Html.RenderPartial("CreateArticlePage", Model.ArticlePages[0]);}
                }
                else
                {
                    { Html.RenderPartial("CreateArticlePage", new PageViewModel() { PageId = -1 }); }
                }
            </div>
        </div>
    </div>
}
